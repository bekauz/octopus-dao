{"version":3,"sources":["../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/isarray/index.js","../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/node-libs-browser/node_modules/buffer/index.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js"],"names":["module","exports","arr","len","length","i","arr2","Array","__esModule","arrayLikeToArray","isArray","iter","Symbol","iterator","from","TypeError","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","Arr","_byteLength","curByte","revLookup","charCodeAt","fromByteArray","uint8","extraBytes","parts","maxChunkLength","len2","push","encodeChunk","lookup","join","Uint8Array","code","Error","indexOf","start","end","num","output","read","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","Math","pow","write","value","c","rt","abs","isNaN","floor","log","LN2","toString","call","_i","_s","_e","_arr","_n","_d","next","done","err","base64","require","ieee754","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","prototype","arg","encodingOrOffset","this","allocUnsafe","ArrayBuffer","array","byteOffset","undefined","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","slice","fromString","obj","isBuffer","checked","copy","val","type","data","fromObject","assertSize","size","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","b","n","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","String","buf","readUInt16BE","foundIndex","found","j","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","global","foo","subarray","typedArraySupport","poolSize","_augment","species","Object","defineProperty","configurable","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","arguments","equals","inspect","max","match","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","INVALID_BASE64_RE","leadSurrogate","trim","replace","stringtrim","base64clean","src","dst","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","arrayWithoutHoles","iterableToArray","nonIterableSpread","o","minLen","constructor","name","test","allowArrayLike","it","F","f","normalCompletion","didErr","step","_e2"],"mappings":";mGAUAA,EAAOC,QAVP,SAA2BC,EAAKC,IACnB,MAAPA,GAAeA,EAAMD,EAAIE,UAAQD,EAAMD,EAAIE,QAE/C,IAAK,IAAIC,EAAI,EAAGC,EAAO,IAAIC,MAAMJ,GAAME,EAAIF,EAAKE,IAC9CC,EAAKD,GAAKH,EAAIG,GAGhB,OAAOC,GAG2BN,EAAOC,QAAQO,YAAa,EAAMR,EAAOC,QAAiB,QAAID,EAAOC,S,oBCVzG,IAAIQ,EAAmB,EAAQ,KAM/BT,EAAOC,QAJP,SAA4BC,GAC1B,GAAIK,MAAMG,QAAQR,GAAM,OAAOO,EAAiBP,IAGbF,EAAOC,QAAQO,YAAa,EAAMR,EAAOC,QAAiB,QAAID,EAAOC,S,kBCF1GD,EAAOC,QAJP,SAA0BU,GACxB,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOJ,MAAMO,KAAKH,IAGnFX,EAAOC,QAAQO,YAAa,EAAMR,EAAOC,QAAiB,QAAID,EAAOC,S,kBCAxGD,EAAOC,QAJP,WACE,MAAM,IAAIc,UAAU,yIAGef,EAAOC,QAAQO,YAAa,EAAMR,EAAOC,QAAiB,QAAID,EAAOC,S,iCCF1GA,EAAQe,WAuCR,SAAqBC,GACnB,IAAIC,EAAOC,EAAQF,GACfG,EAAWF,EAAK,GAChBG,EAAkBH,EAAK,GAC3B,OAAuC,GAA9BE,EAAWC,GAAuB,EAAKA,GA1ClDpB,EAAQqB,YAiDR,SAAsBL,GACpB,IAAIM,EAcAlB,EAbAa,EAAOC,EAAQF,GACfG,EAAWF,EAAK,GAChBG,EAAkBH,EAAK,GAEvBhB,EAAM,IAAIsB,EAVhB,SAAsBP,EAAKG,EAAUC,GACnC,OAAuC,GAA9BD,EAAWC,GAAuB,EAAKA,EAS9BI,CAAYR,EAAKG,EAAUC,IAEzCK,EAAU,EAGVvB,EAAMkB,EAAkB,EACxBD,EAAW,EACXA,EAGJ,IAAKf,EAAI,EAAGA,EAAIF,EAAKE,GAAK,EACxBkB,EACGI,EAAUV,EAAIW,WAAWvB,KAAO,GAChCsB,EAAUV,EAAIW,WAAWvB,EAAI,KAAO,GACpCsB,EAAUV,EAAIW,WAAWvB,EAAI,KAAO,EACrCsB,EAAUV,EAAIW,WAAWvB,EAAI,IAC/BH,EAAIwB,KAAcH,GAAO,GAAM,IAC/BrB,EAAIwB,KAAcH,GAAO,EAAK,IAC9BrB,EAAIwB,KAAmB,IAANH,EAGK,IAApBF,IACFE,EACGI,EAAUV,EAAIW,WAAWvB,KAAO,EAChCsB,EAAUV,EAAIW,WAAWvB,EAAI,KAAO,EACvCH,EAAIwB,KAAmB,IAANH,GAGK,IAApBF,IACFE,EACGI,EAAUV,EAAIW,WAAWvB,KAAO,GAChCsB,EAAUV,EAAIW,WAAWvB,EAAI,KAAO,EACpCsB,EAAUV,EAAIW,WAAWvB,EAAI,KAAO,EACvCH,EAAIwB,KAAcH,GAAO,EAAK,IAC9BrB,EAAIwB,KAAmB,IAANH,GAGnB,OAAOrB,GA3FTD,EAAQ4B,cAkHR,SAAwBC,GAQtB,IAPA,IAAIP,EACApB,EAAM2B,EAAM1B,OACZ2B,EAAa5B,EAAM,EACnB6B,EAAQ,GACRC,EAAiB,MAGZ5B,EAAI,EAAG6B,EAAO/B,EAAM4B,EAAY1B,EAAI6B,EAAM7B,GAAK4B,EACtDD,EAAMG,KAAKC,EAAYN,EAAOzB,EAAIA,EAAI4B,EAAkBC,EAAOA,EAAQ7B,EAAI4B,IAI1D,IAAfF,GACFR,EAAMO,EAAM3B,EAAM,GAClB6B,EAAMG,KACJE,EAAOd,GAAO,GACdc,EAAQd,GAAO,EAAK,IACpB,OAEsB,IAAfQ,IACTR,GAAOO,EAAM3B,EAAM,IAAM,GAAK2B,EAAM3B,EAAM,GAC1C6B,EAAMG,KACJE,EAAOd,GAAO,IACdc,EAAQd,GAAO,EAAK,IACpBc,EAAQd,GAAO,EAAK,IACpB,MAIJ,OAAOS,EAAMM,KAAK,KAzIpB,IALA,IAAID,EAAS,GACTV,EAAY,GACZH,EAA4B,qBAAfe,WAA6BA,WAAahC,MAEvDiC,EAAO,mEACFnC,EAAI,EAAGF,EAAMqC,EAAKpC,OAAQC,EAAIF,IAAOE,EAC5CgC,EAAOhC,GAAKmC,EAAKnC,GACjBsB,EAAUa,EAAKZ,WAAWvB,IAAMA,EAQlC,SAASc,EAASF,GAChB,IAAId,EAAMc,EAAIb,OAEd,GAAID,EAAM,EAAI,EACZ,MAAM,IAAIsC,MAAM,kDAKlB,IAAIrB,EAAWH,EAAIyB,QAAQ,KAO3B,OANkB,IAAdtB,IAAiBA,EAAWjB,GAMzB,CAACiB,EAJcA,IAAajB,EAC/B,EACA,EAAKiB,EAAW,GAsEtB,SAASgB,EAAaN,EAAOa,EAAOC,GAGlC,IAFA,IAAIrB,EARoBsB,EASpBC,EAAS,GACJzC,EAAIsC,EAAOtC,EAAIuC,EAAKvC,GAAK,EAChCkB,GACIO,EAAMzB,IAAM,GAAM,WAClByB,EAAMzB,EAAI,IAAM,EAAK,QACP,IAAfyB,EAAMzB,EAAI,IACbyC,EAAOX,KAdFE,GADiBQ,EAeMtB,IAdT,GAAK,IACxBc,EAAOQ,GAAO,GAAK,IACnBR,EAAOQ,GAAO,EAAI,IAClBR,EAAa,GAANQ,IAaT,OAAOC,EAAOR,KAAK,IAjGrBX,EAAU,IAAIC,WAAW,IAAM,GAC/BD,EAAU,IAAIC,WAAW,IAAM,I,kBClB/B3B,EAAQ8C,KAAO,SAAUC,EAAQC,EAAQC,EAAMC,EAAMC,GACnD,IAAIC,EAAGC,EACHC,EAAiB,EAATH,EAAcD,EAAO,EAC7BK,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBE,GAAS,EACTrD,EAAI6C,EAAQE,EAAS,EAAK,EAC1BO,EAAIT,GAAQ,EAAI,EAChBU,EAAIZ,EAAOC,EAAS5C,GAOxB,IALAA,GAAKsD,EAELN,EAAIO,GAAM,IAAOF,GAAU,EAC3BE,KAAQF,EACRA,GAASH,EACFG,EAAQ,EAAGL,EAAS,IAAJA,EAAWL,EAAOC,EAAS5C,GAAIA,GAAKsD,EAAGD,GAAS,GAKvE,IAHAJ,EAAID,GAAM,IAAOK,GAAU,EAC3BL,KAAQK,EACRA,GAASP,EACFO,EAAQ,EAAGJ,EAAS,IAAJA,EAAWN,EAAOC,EAAS5C,GAAIA,GAAKsD,EAAGD,GAAS,GAEvE,GAAU,IAANL,EACFA,EAAI,EAAII,MACH,IAAIJ,IAAMG,EACf,OAAOF,EAAIO,IAAsBC,KAAdF,GAAK,EAAI,GAE5BN,GAAQS,KAAKC,IAAI,EAAGb,GACpBE,GAAQI,EAEV,OAAQG,GAAK,EAAI,GAAKN,EAAIS,KAAKC,IAAI,EAAGX,EAAIF,IAG5ClD,EAAQgE,MAAQ,SAAUjB,EAAQkB,EAAOjB,EAAQC,EAAMC,EAAMC,GAC3D,IAAIC,EAAGC,EAAGa,EACNZ,EAAiB,EAATH,EAAcD,EAAO,EAC7BK,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBY,EAAe,KAATjB,EAAcY,KAAKC,IAAI,GAAI,IAAMD,KAAKC,IAAI,GAAI,IAAM,EAC1D3D,EAAI6C,EAAO,EAAKE,EAAS,EACzBO,EAAIT,EAAO,GAAK,EAChBU,EAAIM,EAAQ,GAAgB,IAAVA,GAAe,EAAIA,EAAQ,EAAK,EAAI,EAmC1D,IAjCAA,EAAQH,KAAKM,IAAIH,GAEbI,MAAMJ,IAAUA,IAAUJ,KAC5BR,EAAIgB,MAAMJ,GAAS,EAAI,EACvBb,EAAIG,IAEJH,EAAIU,KAAKQ,MAAMR,KAAKS,IAAIN,GAASH,KAAKU,KAClCP,GAASC,EAAIJ,KAAKC,IAAI,GAAIX,IAAM,IAClCA,IACAc,GAAK,IAGLD,GADEb,EAAII,GAAS,EACNW,EAAKD,EAELC,EAAKL,KAAKC,IAAI,EAAG,EAAIP,IAEpBU,GAAK,IACfd,IACAc,GAAK,GAGHd,EAAII,GAASD,GACfF,EAAI,EACJD,EAAIG,GACKH,EAAII,GAAS,GACtBH,GAAMY,EAAQC,EAAK,GAAKJ,KAAKC,IAAI,EAAGb,GACpCE,GAAQI,IAERH,EAAIY,EAAQH,KAAKC,IAAI,EAAGP,EAAQ,GAAKM,KAAKC,IAAI,EAAGb,GACjDE,EAAI,IAIDF,GAAQ,EAAGH,EAAOC,EAAS5C,GAAS,IAAJiD,EAAUjD,GAAKsD,EAAGL,GAAK,IAAKH,GAAQ,GAI3E,IAFAE,EAAKA,GAAKF,EAAQG,EAClBC,GAAQJ,EACDI,EAAO,EAAGP,EAAOC,EAAS5C,GAAS,IAAJgD,EAAUhD,GAAKsD,EAAGN,GAAK,IAAKE,GAAQ,GAE1EP,EAAOC,EAAS5C,EAAIsD,IAAU,IAAJC,I,kBCnF5B,IAAIc,EAAW,GAAGA,SAElB1E,EAAOC,QAAUM,MAAMG,SAAW,SAAUR,GAC1C,MAA6B,kBAAtBwE,EAASC,KAAKzE,K,kBCCvBF,EAAOC,QAJP,SAAyBC,GACvB,GAAIK,MAAMG,QAAQR,GAAM,OAAOA,GAGCF,EAAOC,QAAQO,YAAa,EAAMR,EAAOC,QAAiB,QAAID,EAAOC,S,kBC0BvGD,EAAOC,QA9BP,SAA+BC,EAAKG,GAClC,IAAIuE,EAAY,MAAP1E,EAAc,KAAyB,qBAAXU,QAA0BV,EAAIU,OAAOC,WAAaX,EAAI,cAE3F,GAAU,MAAN0E,EAAJ,CACA,IAIIC,EAAIC,EAJJC,EAAO,GACPC,GAAK,EACLC,GAAK,EAIT,IACE,IAAKL,EAAKA,EAAGD,KAAKzE,KAAQ8E,GAAMH,EAAKD,EAAGM,QAAQC,QAC9CJ,EAAK5C,KAAK0C,EAAGX,QAET7D,GAAK0E,EAAK3E,SAAWC,GAH4B2E,GAAK,IAK5D,MAAOI,GACPH,GAAK,EACLH,EAAKM,EACL,QACA,IACOJ,GAAsB,MAAhBJ,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIK,EAAI,MAAMH,GAIlB,OAAOC,IAG+B/E,EAAOC,QAAQO,YAAa,EAAMR,EAAOC,QAAiB,QAAID,EAAOC,S,kBC1B7GD,EAAOC,QAJP,WACE,MAAM,IAAIc,UAAU,8IAGaf,EAAOC,QAAQO,YAAa,EAAMR,EAAOC,QAAiB,QAAID,EAAOC,S,iCCJxG,YAUA,IAAIoF,EAASC,EAAQ,KACjBC,EAAUD,EAAQ,KAClB5E,EAAU4E,EAAQ,KAmDtB,SAASE,IACP,OAAOC,EAAOC,oBACV,WACA,WAGN,SAASC,EAAcC,EAAMxF,GAC3B,GAAIoF,IAAepF,EACjB,MAAM,IAAIyF,WAAW,8BAcvB,OAZIJ,EAAOC,qBAETE,EAAO,IAAIrD,WAAWnC,IACjB0F,UAAYL,EAAOM,WAGX,OAATH,IACFA,EAAO,IAAIH,EAAOrF,IAEpBwF,EAAKxF,OAASA,GAGTwF,EAaT,SAASH,EAAQO,EAAKC,EAAkB7F,GACtC,IAAKqF,EAAOC,uBAAyBQ,gBAAgBT,GACnD,OAAO,IAAIA,EAAOO,EAAKC,EAAkB7F,GAI3C,GAAmB,kBAAR4F,EAAkB,CAC3B,GAAgC,kBAArBC,EACT,MAAM,IAAIxD,MACR,qEAGJ,OAAO0D,EAAYD,KAAMF,GAE3B,OAAOlF,EAAKoF,KAAMF,EAAKC,EAAkB7F,GAW3C,SAASU,EAAM8E,EAAM1B,EAAO+B,EAAkB7F,GAC5C,GAAqB,kBAAV8D,EACT,MAAM,IAAInD,UAAU,yCAGtB,MAA2B,qBAAhBqF,aAA+BlC,aAAiBkC,YA6H7D,SAA0BR,EAAMS,EAAOC,EAAYlG,GAGjD,GAFAiG,EAAMrF,WAEFsF,EAAa,GAAKD,EAAMrF,WAAasF,EACvC,MAAM,IAAIT,WAAW,6BAGvB,GAAIQ,EAAMrF,WAAasF,GAAclG,GAAU,GAC7C,MAAM,IAAIyF,WAAW,6BAIrBQ,OADiBE,IAAfD,QAAuCC,IAAXnG,EACtB,IAAImC,WAAW8D,QACHE,IAAXnG,EACD,IAAImC,WAAW8D,EAAOC,GAEtB,IAAI/D,WAAW8D,EAAOC,EAAYlG,GAGxCqF,EAAOC,qBAETE,EAAOS,GACFP,UAAYL,EAAOM,UAGxBH,EAAOY,EAAcZ,EAAMS,GAE7B,OAAOT,EAvJEa,CAAgBb,EAAM1B,EAAO+B,EAAkB7F,GAGnC,kBAAV8D,EAwFb,SAAqB0B,EAAMc,EAAQC,GACT,kBAAbA,GAAsC,KAAbA,IAClCA,EAAW,QAGb,IAAKlB,EAAOmB,WAAWD,GACrB,MAAM,IAAI5F,UAAU,8CAGtB,IAAIX,EAAwC,EAA/BY,EAAW0F,EAAQC,GAG5BE,GAFJjB,EAAOD,EAAaC,EAAMxF,IAER6D,MAAMyC,EAAQC,GAE5BE,IAAWzG,IAIbwF,EAAOA,EAAKkB,MAAM,EAAGD,IAGvB,OAAOjB,EA5GEmB,CAAWnB,EAAM1B,EAAO+B,GAsJnC,SAAqBL,EAAMoB,GACzB,GAAIvB,EAAOwB,SAASD,GAAM,CACxB,IAAI7G,EAA4B,EAAtB+G,EAAQF,EAAI5G,QAGtB,OAAoB,KAFpBwF,EAAOD,EAAaC,EAAMzF,IAEjBC,QAIT4G,EAAIG,KAAKvB,EAAM,EAAG,EAAGzF,GAHZyF,EAOX,GAAIoB,EAAK,CACP,GAA4B,qBAAhBZ,aACRY,EAAIhE,kBAAkBoD,aAAgB,WAAYY,EACpD,MAA0B,kBAAfA,EAAI5G,SA+8CLgH,EA/8CkCJ,EAAI5G,UAg9CrCgH,EA/8CFzB,EAAaC,EAAM,GAErBY,EAAcZ,EAAMoB,GAG7B,GAAiB,WAAbA,EAAIK,MAAqB3G,EAAQsG,EAAIM,MACvC,OAAOd,EAAcZ,EAAMoB,EAAIM,MAw8CrC,IAAgBF,EAp8Cd,MAAM,IAAIrG,UAAU,sFA9KbwG,CAAW3B,EAAM1B,GA4B1B,SAASsD,EAAYC,GACnB,GAAoB,kBAATA,EACT,MAAM,IAAI1G,UAAU,oCACf,GAAI0G,EAAO,EAChB,MAAM,IAAI5B,WAAW,wCA4BzB,SAASM,EAAaP,EAAM6B,GAG1B,GAFAD,EAAWC,GACX7B,EAAOD,EAAaC,EAAM6B,EAAO,EAAI,EAAoB,EAAhBP,EAAQO,KAC5ChC,EAAOC,oBACV,IAAK,IAAIrF,EAAI,EAAGA,EAAIoH,IAAQpH,EAC1BuF,EAAKvF,GAAK,EAGd,OAAOuF,EAwCT,SAASY,EAAeZ,EAAMS,GAC5B,IAAIjG,EAASiG,EAAMjG,OAAS,EAAI,EAA4B,EAAxB8G,EAAQb,EAAMjG,QAClDwF,EAAOD,EAAaC,EAAMxF,GAC1B,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAC/BuF,EAAKvF,GAAgB,IAAXgG,EAAMhG,GAElB,OAAOuF,EA+DT,SAASsB,EAAS9G,GAGhB,GAAIA,GAAUoF,IACZ,MAAM,IAAIK,WAAW,0DACaL,IAAad,SAAS,IAAM,UAEhE,OAAgB,EAATtE,EAsFT,SAASY,EAAY0F,EAAQC,GAC3B,GAAIlB,EAAOwB,SAASP,GAClB,OAAOA,EAAOtG,OAEhB,GAA2B,qBAAhBgG,aAA6D,oBAAvBA,YAAYsB,SACxDtB,YAAYsB,OAAOhB,IAAWA,aAAkBN,aACnD,OAAOM,EAAO1F,WAEM,kBAAX0F,IACTA,EAAS,GAAKA,GAGhB,IAAIvG,EAAMuG,EAAOtG,OACjB,GAAY,IAARD,EAAW,OAAO,EAItB,IADA,IAAIwH,GAAc,IAEhB,OAAQhB,GACN,IAAK,QACL,IAAK,SACL,IAAK,SACH,OAAOxG,EACT,IAAK,OACL,IAAK,QACL,UAAKoG,EACH,OAAOqB,EAAYlB,GAAQtG,OAC7B,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAa,EAAND,EACT,IAAK,MACH,OAAOA,IAAQ,EACjB,IAAK,SACH,OAAO0H,EAAcnB,GAAQtG,OAC/B,QACE,GAAIuH,EAAa,OAAOC,EAAYlB,GAAQtG,OAC5CuG,GAAY,GAAKA,GAAUmB,cAC3BH,GAAc,GAMtB,SAASI,EAAcpB,EAAUhE,EAAOC,GACtC,IAAI+E,GAAc,EAclB,SALcpB,IAAV5D,GAAuBA,EAAQ,KACjCA,EAAQ,GAINA,EAAQuD,KAAK9F,OACf,MAAO,GAOT,SAJYmG,IAAR3D,GAAqBA,EAAMsD,KAAK9F,UAClCwC,EAAMsD,KAAK9F,QAGTwC,GAAO,EACT,MAAO,GAOT,IAHAA,KAAS,KACTD,KAAW,GAGT,MAAO,GAKT,IAFKgE,IAAUA,EAAW,UAGxB,OAAQA,GACN,IAAK,MACH,OAAOqB,EAAS9B,KAAMvD,EAAOC,GAE/B,IAAK,OACL,IAAK,QACH,OAAOqF,EAAU/B,KAAMvD,EAAOC,GAEhC,IAAK,QACH,OAAOsF,EAAWhC,KAAMvD,EAAOC,GAEjC,IAAK,SACL,IAAK,SACH,OAAOuF,EAAYjC,KAAMvD,EAAOC,GAElC,IAAK,SACH,OAAOwF,EAAYlC,KAAMvD,EAAOC,GAElC,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAOyF,EAAanC,KAAMvD,EAAOC,GAEnC,QACE,GAAI+E,EAAa,MAAM,IAAI5G,UAAU,qBAAuB4F,GAC5DA,GAAYA,EAAW,IAAImB,cAC3BH,GAAc,GAStB,SAASW,EAAMC,EAAGC,EAAGlF,GACnB,IAAIjD,EAAIkI,EAAEC,GACVD,EAAEC,GAAKD,EAAEjF,GACTiF,EAAEjF,GAAKjD,EAmIT,SAASoI,EAAsBzF,EAAQoE,EAAKd,EAAYK,EAAU+B,GAEhE,GAAsB,IAAlB1F,EAAO5C,OAAc,OAAQ,EAmBjC,GAhB0B,kBAAfkG,GACTK,EAAWL,EACXA,EAAa,GACJA,EAAa,WACtBA,EAAa,WACJA,GAAc,aACvBA,GAAc,YAEhBA,GAAcA,EACVhC,MAAMgC,KAERA,EAAaoC,EAAM,EAAK1F,EAAO5C,OAAS,GAItCkG,EAAa,IAAGA,EAAatD,EAAO5C,OAASkG,GAC7CA,GAActD,EAAO5C,OAAQ,CAC/B,GAAIsI,EAAK,OAAQ,EACZpC,EAAatD,EAAO5C,OAAS,OAC7B,GAAIkG,EAAa,EAAG,CACzB,IAAIoC,EACC,OAAQ,EADJpC,EAAa,EAUxB,GALmB,kBAARc,IACTA,EAAM3B,EAAO3E,KAAKsG,EAAKT,IAIrBlB,EAAOwB,SAASG,GAElB,OAAmB,IAAfA,EAAIhH,QACE,EAEHuI,EAAa3F,EAAQoE,EAAKd,EAAYK,EAAU+B,GAClD,GAAmB,kBAARtB,EAEhB,OADAA,GAAY,IACR3B,EAAOC,qBACiC,oBAAjCnD,WAAWwD,UAAUrD,QAC1BgG,EACKnG,WAAWwD,UAAUrD,QAAQiC,KAAK3B,EAAQoE,EAAKd,GAE/C/D,WAAWwD,UAAU6C,YAAYjE,KAAK3B,EAAQoE,EAAKd,GAGvDqC,EAAa3F,EAAQ,CAAEoE,GAAOd,EAAYK,EAAU+B,GAG7D,MAAM,IAAI3H,UAAU,wCAGtB,SAAS4H,EAAczI,EAAKkH,EAAKd,EAAYK,EAAU+B,GACrD,IA0BIrI,EA1BAwI,EAAY,EACZC,EAAY5I,EAAIE,OAChB2I,EAAY3B,EAAIhH,OAEpB,QAAiBmG,IAAbI,IAEe,UADjBA,EAAWqC,OAAOrC,GAAUmB,gBACY,UAAbnB,GACV,YAAbA,GAAuC,aAAbA,GAAyB,CACrD,GAAIzG,EAAIE,OAAS,GAAKgH,EAAIhH,OAAS,EACjC,OAAQ,EAEVyI,EAAY,EACZC,GAAa,EACbC,GAAa,EACbzC,GAAc,EAIlB,SAASvD,EAAMkG,EAAK5I,GAClB,OAAkB,IAAdwI,EACKI,EAAI5I,GAEJ4I,EAAIC,aAAa7I,EAAIwI,GAKhC,GAAIH,EAAK,CACP,IAAIS,GAAc,EAClB,IAAK9I,EAAIiG,EAAYjG,EAAIyI,EAAWzI,IAClC,GAAI0C,EAAK7C,EAAKG,KAAO0C,EAAKqE,GAAqB,IAAhB+B,EAAoB,EAAI9I,EAAI8I,IAEzD,IADoB,IAAhBA,IAAmBA,EAAa9I,GAChCA,EAAI8I,EAAa,IAAMJ,EAAW,OAAOI,EAAaN,OAEtC,IAAhBM,IAAmB9I,GAAKA,EAAI8I,GAChCA,GAAc,OAKlB,IADI7C,EAAayC,EAAYD,IAAWxC,EAAawC,EAAYC,GAC5D1I,EAAIiG,EAAYjG,GAAK,EAAGA,IAAK,CAEhC,IADA,IAAI+I,GAAQ,EACHC,EAAI,EAAGA,EAAIN,EAAWM,IAC7B,GAAItG,EAAK7C,EAAKG,EAAIgJ,KAAOtG,EAAKqE,EAAKiC,GAAI,CACrCD,GAAQ,EACR,MAGJ,GAAIA,EAAO,OAAO/I,EAItB,OAAQ,EAeV,SAASiJ,EAAUL,EAAKvC,EAAQzD,EAAQ7C,GACtC6C,EAASsG,OAAOtG,IAAW,EAC3B,IAAIuG,EAAYP,EAAI7I,OAAS6C,EACxB7C,GAGHA,EAASmJ,OAAOnJ,IACHoJ,IACXpJ,EAASoJ,GAJXpJ,EAASoJ,EASX,IAAIC,EAAS/C,EAAOtG,OACpB,GAAIqJ,EAAS,IAAM,EAAG,MAAM,IAAI1I,UAAU,sBAEtCX,EAASqJ,EAAS,IACpBrJ,EAASqJ,EAAS,GAEpB,IAAK,IAAIpJ,EAAI,EAAGA,EAAID,IAAUC,EAAG,CAC/B,IAAIqJ,EAASC,SAASjD,EAAOkD,OAAW,EAAJvJ,EAAO,GAAI,IAC/C,GAAIiE,MAAMoF,GAAS,OAAOrJ,EAC1B4I,EAAIhG,EAAS5C,GAAKqJ,EAEpB,OAAOrJ,EAGT,SAASwJ,EAAWZ,EAAKvC,EAAQzD,EAAQ7C,GACvC,OAAO0J,EAAWlC,EAAYlB,EAAQuC,EAAI7I,OAAS6C,GAASgG,EAAKhG,EAAQ7C,GAG3E,SAAS2J,EAAYd,EAAKvC,EAAQzD,EAAQ7C,GACxC,OAAO0J,EAq6BT,SAAuBE,GAErB,IADA,IAAIC,EAAY,GACP5J,EAAI,EAAGA,EAAI2J,EAAI5J,SAAUC,EAEhC4J,EAAU9H,KAAyB,IAApB6H,EAAIpI,WAAWvB,IAEhC,OAAO4J,EA36BWC,CAAaxD,GAASuC,EAAKhG,EAAQ7C,GAGvD,SAAS+J,EAAalB,EAAKvC,EAAQzD,EAAQ7C,GACzC,OAAO2J,EAAWd,EAAKvC,EAAQzD,EAAQ7C,GAGzC,SAASgK,EAAanB,EAAKvC,EAAQzD,EAAQ7C,GACzC,OAAO0J,EAAWjC,EAAcnB,GAASuC,EAAKhG,EAAQ7C,GAGxD,SAASiK,EAAWpB,EAAKvC,EAAQzD,EAAQ7C,GACvC,OAAO0J,EAk6BT,SAAyBE,EAAKM,GAG5B,IAFA,IAAInG,EAAGoG,EAAIC,EACPP,EAAY,GACP5J,EAAI,EAAGA,EAAI2J,EAAI5J,WACjBkK,GAAS,GAAK,KADajK,EAIhCkK,GADApG,EAAI6F,EAAIpI,WAAWvB,KACT,EACVmK,EAAKrG,EAAI,IACT8F,EAAU9H,KAAKqI,GACfP,EAAU9H,KAAKoI,GAGjB,OAAON,EA/6BWQ,CAAe/D,EAAQuC,EAAI7I,OAAS6C,GAASgG,EAAKhG,EAAQ7C,GAkF9E,SAASgI,EAAaa,EAAKtG,EAAOC,GAChC,OAAc,IAAVD,GAAeC,IAAQqG,EAAI7I,OACtBiF,EAAOxD,cAAcoH,GAErB5D,EAAOxD,cAAcoH,EAAInC,MAAMnE,EAAOC,IAIjD,SAASqF,EAAWgB,EAAKtG,EAAOC,GAC9BA,EAAMmB,KAAK2G,IAAIzB,EAAI7I,OAAQwC,GAI3B,IAHA,IAAI+H,EAAM,GAENtK,EAAIsC,EACDtC,EAAIuC,GAAK,CACd,IAQMgI,EAAYC,EAAWC,EAAYC,EARrCC,EAAY/B,EAAI5I,GAChB4K,EAAY,KACZC,EAAoBF,EAAY,IAAQ,EACvCA,EAAY,IAAQ,EACpBA,EAAY,IAAQ,EACrB,EAEJ,GAAI3K,EAAI6K,GAAoBtI,EAG1B,OAAQsI,GACN,KAAK,EACCF,EAAY,MACdC,EAAYD,GAEd,MACF,KAAK,EAEyB,OAAV,KADlBJ,EAAa3B,EAAI5I,EAAI,OAEnB0K,GAA6B,GAAZC,IAAqB,EAAoB,GAAbJ,GACzB,MAClBK,EAAYF,GAGhB,MACF,KAAK,EACHH,EAAa3B,EAAI5I,EAAI,GACrBwK,EAAY5B,EAAI5I,EAAI,GACQ,OAAV,IAAbuK,IAAsD,OAAV,IAAZC,KACnCE,GAA6B,GAAZC,IAAoB,IAAoB,GAAbJ,IAAsB,EAAmB,GAAZC,GACrD,OAAUE,EAAgB,OAAUA,EAAgB,SACtEE,EAAYF,GAGhB,MACF,KAAK,EACHH,EAAa3B,EAAI5I,EAAI,GACrBwK,EAAY5B,EAAI5I,EAAI,GACpByK,EAAa7B,EAAI5I,EAAI,GACO,OAAV,IAAbuK,IAAsD,OAAV,IAAZC,IAAsD,OAAV,IAAbC,KAClEC,GAA6B,GAAZC,IAAoB,IAAqB,GAAbJ,IAAsB,IAAmB,GAAZC,IAAqB,EAAoB,GAAbC,GAClF,OAAUC,EAAgB,UAC5CE,EAAYF,GAMJ,OAAdE,GAGFA,EAAY,MACZC,EAAmB,GACVD,EAAY,QAErBA,GAAa,MACbN,EAAIxI,KAAK8I,IAAc,GAAK,KAAQ,OACpCA,EAAY,MAAqB,KAAZA,GAGvBN,EAAIxI,KAAK8I,GACT5K,GAAK6K,EAGP,OAQF,SAAgCC,GAC9B,IAAIhL,EAAMgL,EAAW/K,OACrB,GAAID,GAAOiL,EACT,OAAOpC,OAAOqC,aAAaC,MAAMtC,OAAQmC,GAI3C,IAAIR,EAAM,GACNtK,EAAI,EACR,KAAOA,EAAIF,GACTwK,GAAO3B,OAAOqC,aAAaC,MACzBtC,OACAmC,EAAWrE,MAAMzG,EAAGA,GAAK+K,IAG7B,OAAOT,EAvBAY,CAAsBZ,GA98B/B1K,EAAQwF,OAASA,EACjBxF,EAAQuL,WAoTR,SAAqBpL,IACdA,GAAUA,IACbA,EAAS,GAEX,OAAOqF,EAAOgG,OAAOrL,IAvTvBH,EAAQyL,kBAAoB,GA0B5BjG,EAAOC,yBAAqDa,IAA/BoF,EAAOjG,oBAChCiG,EAAOjG,oBAQX,WACE,IACE,IAAIxF,EAAM,IAAIqC,WAAW,GAEzB,OADArC,EAAI4F,UAAY,CAACA,UAAWvD,WAAWwD,UAAW6F,IAAK,WAAc,OAAO,KACvD,KAAd1L,EAAI0L,OACiB,oBAAjB1L,EAAI2L,UACuB,IAAlC3L,EAAI2L,SAAS,EAAG,GAAG7K,WACvB,MAAOqC,GACP,OAAO,GAfPyI,GAKJ7L,EAAQuF,WAAaA,IAkErBC,EAAOsG,SAAW,KAGlBtG,EAAOuG,SAAW,SAAU9L,GAE1B,OADAA,EAAI4F,UAAYL,EAAOM,UAChB7F,GA2BTuF,EAAO3E,KAAO,SAAUoD,EAAO+B,EAAkB7F,GAC/C,OAAOU,EAAK,KAAMoD,EAAO+B,EAAkB7F,IAGzCqF,EAAOC,sBACTD,EAAOM,UAAUD,UAAYvD,WAAWwD,UACxCN,EAAOK,UAAYvD,WACG,qBAAX3B,QAA0BA,OAAOqL,SACxCxG,EAAO7E,OAAOqL,WAAaxG,GAE7ByG,OAAOC,eAAe1G,EAAQ7E,OAAOqL,QAAS,CAC5C/H,MAAO,KACPkI,cAAc,KAiCpB3G,EAAOgG,MAAQ,SAAUhE,EAAM4E,EAAM1F,GACnC,OArBF,SAAgBf,EAAM6B,EAAM4E,EAAM1F,GAEhC,OADAa,EAAWC,GACPA,GAAQ,EACH9B,EAAaC,EAAM6B,QAEflB,IAAT8F,EAIyB,kBAAb1F,EACVhB,EAAaC,EAAM6B,GAAM4E,KAAKA,EAAM1F,GACpChB,EAAaC,EAAM6B,GAAM4E,KAAKA,GAE7B1G,EAAaC,EAAM6B,GAQnBgE,CAAM,KAAMhE,EAAM4E,EAAM1F,IAiBjClB,EAAOU,YAAc,SAAUsB,GAC7B,OAAOtB,EAAY,KAAMsB,IAK3BhC,EAAO6G,gBAAkB,SAAU7E,GACjC,OAAOtB,EAAY,KAAMsB,IAiH3BhC,EAAOwB,SAAW,SAAmBsB,GACnC,QAAe,MAALA,IAAaA,EAAEgE,YAG3B9G,EAAO+G,QAAU,SAAkBC,EAAGlE,GACpC,IAAK9C,EAAOwB,SAASwF,KAAOhH,EAAOwB,SAASsB,GAC1C,MAAM,IAAIxH,UAAU,6BAGtB,GAAI0L,IAAMlE,EAAG,OAAO,EAKpB,IAHA,IAAImE,EAAID,EAAErM,OACNuM,EAAIpE,EAAEnI,OAEDC,EAAI,EAAGF,EAAM4D,KAAK2G,IAAIgC,EAAGC,GAAItM,EAAIF,IAAOE,EAC/C,GAAIoM,EAAEpM,KAAOkI,EAAElI,GAAI,CACjBqM,EAAID,EAAEpM,GACNsM,EAAIpE,EAAElI,GACN,MAIJ,OAAIqM,EAAIC,GAAW,EACfA,EAAID,EAAU,EACX,GAGTjH,EAAOmB,WAAa,SAAqBD,GACvC,OAAQqC,OAAOrC,GAAUmB,eACvB,IAAK,MACL,IAAK,OACL,IAAK,QACL,IAAK,QACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAO,EACT,QACE,OAAO,IAIbrC,EAAOmH,OAAS,SAAiBC,EAAMzM,GACrC,IAAKM,EAAQmM,GACX,MAAM,IAAI9L,UAAU,+CAGtB,GAAoB,IAAhB8L,EAAKzM,OACP,OAAOqF,EAAOgG,MAAM,GAGtB,IAAIpL,EACJ,QAAekG,IAAXnG,EAEF,IADAA,EAAS,EACJC,EAAI,EAAGA,EAAIwM,EAAKzM,SAAUC,EAC7BD,GAAUyM,EAAKxM,GAAGD,OAItB,IAAI4C,EAASyC,EAAOU,YAAY/F,GAC5B0M,EAAM,EACV,IAAKzM,EAAI,EAAGA,EAAIwM,EAAKzM,SAAUC,EAAG,CAChC,IAAI4I,EAAM4D,EAAKxM,GACf,IAAKoF,EAAOwB,SAASgC,GACnB,MAAM,IAAIlI,UAAU,+CAEtBkI,EAAI9B,KAAKnE,EAAQ8J,GACjBA,GAAO7D,EAAI7I,OAEb,OAAO4C,GA8CTyC,EAAOzE,WAAaA,EA0EpByE,EAAOM,UAAUwG,WAAY,EAQ7B9G,EAAOM,UAAUgH,OAAS,WACxB,IAAI5M,EAAM+F,KAAK9F,OACf,GAAID,EAAM,IAAM,EACd,MAAM,IAAI0F,WAAW,6CAEvB,IAAK,IAAIxF,EAAI,EAAGA,EAAIF,EAAKE,GAAK,EAC5BiI,EAAKpC,KAAM7F,EAAGA,EAAI,GAEpB,OAAO6F,MAGTT,EAAOM,UAAUiH,OAAS,WACxB,IAAI7M,EAAM+F,KAAK9F,OACf,GAAID,EAAM,IAAM,EACd,MAAM,IAAI0F,WAAW,6CAEvB,IAAK,IAAIxF,EAAI,EAAGA,EAAIF,EAAKE,GAAK,EAC5BiI,EAAKpC,KAAM7F,EAAGA,EAAI,GAClBiI,EAAKpC,KAAM7F,EAAI,EAAGA,EAAI,GAExB,OAAO6F,MAGTT,EAAOM,UAAUkH,OAAS,WACxB,IAAI9M,EAAM+F,KAAK9F,OACf,GAAID,EAAM,IAAM,EACd,MAAM,IAAI0F,WAAW,6CAEvB,IAAK,IAAIxF,EAAI,EAAGA,EAAIF,EAAKE,GAAK,EAC5BiI,EAAKpC,KAAM7F,EAAGA,EAAI,GAClBiI,EAAKpC,KAAM7F,EAAI,EAAGA,EAAI,GACtBiI,EAAKpC,KAAM7F,EAAI,EAAGA,EAAI,GACtBiI,EAAKpC,KAAM7F,EAAI,EAAGA,EAAI,GAExB,OAAO6F,MAGTT,EAAOM,UAAUrB,SAAW,WAC1B,IAAItE,EAAuB,EAAd8F,KAAK9F,OAClB,OAAe,IAAXA,EAAqB,GACA,IAArB8M,UAAU9M,OAAqB6H,EAAU/B,KAAM,EAAG9F,GAC/C2H,EAAauD,MAAMpF,KAAMgH,YAGlCzH,EAAOM,UAAUoH,OAAS,SAAiB5E,GACzC,IAAK9C,EAAOwB,SAASsB,GAAI,MAAM,IAAIxH,UAAU,6BAC7C,OAAImF,OAASqC,GACsB,IAA5B9C,EAAO+G,QAAQtG,KAAMqC,IAG9B9C,EAAOM,UAAUqH,QAAU,WACzB,IAAIpD,EAAM,GACNqD,EAAMpN,EAAQyL,kBAKlB,OAJIxF,KAAK9F,OAAS,IAChB4J,EAAM9D,KAAKxB,SAAS,MAAO,EAAG2I,GAAKC,MAAM,SAAShL,KAAK,KACnD4D,KAAK9F,OAASiN,IAAKrD,GAAO,UAEzB,WAAaA,EAAM,KAG5BvE,EAAOM,UAAUyG,QAAU,SAAkBe,EAAQ5K,EAAOC,EAAK4K,EAAWC,GAC1E,IAAKhI,EAAOwB,SAASsG,GACnB,MAAM,IAAIxM,UAAU,6BAgBtB,QAbcwF,IAAV5D,IACFA,EAAQ,QAEE4D,IAAR3D,IACFA,EAAM2K,EAASA,EAAOnN,OAAS,QAEfmG,IAAdiH,IACFA,EAAY,QAEEjH,IAAZkH,IACFA,EAAUvH,KAAK9F,QAGbuC,EAAQ,GAAKC,EAAM2K,EAAOnN,QAAUoN,EAAY,GAAKC,EAAUvH,KAAK9F,OACtE,MAAM,IAAIyF,WAAW,sBAGvB,GAAI2H,GAAaC,GAAW9K,GAASC,EACnC,OAAO,EAET,GAAI4K,GAAaC,EACf,OAAQ,EAEV,GAAI9K,GAASC,EACX,OAAO,EAQT,GAAIsD,OAASqH,EAAQ,OAAO,EAS5B,IAPA,IAAIb,GAJJe,KAAa,IADbD,KAAe,GAMXb,GAPJ/J,KAAS,IADTD,KAAW,GASPxC,EAAM4D,KAAK2G,IAAIgC,EAAGC,GAElBe,EAAWxH,KAAKY,MAAM0G,EAAWC,GACjCE,EAAaJ,EAAOzG,MAAMnE,EAAOC,GAE5BvC,EAAI,EAAGA,EAAIF,IAAOE,EACzB,GAAIqN,EAASrN,KAAOsN,EAAWtN,GAAI,CACjCqM,EAAIgB,EAASrN,GACbsM,EAAIgB,EAAWtN,GACf,MAIJ,OAAIqM,EAAIC,GAAW,EACfA,EAAID,EAAU,EACX,GA6HTjH,EAAOM,UAAU6H,SAAW,SAAmBxG,EAAKd,EAAYK,GAC9D,OAAoD,IAA7CT,KAAKxD,QAAQ0E,EAAKd,EAAYK,IAGvClB,EAAOM,UAAUrD,QAAU,SAAkB0E,EAAKd,EAAYK,GAC5D,OAAO8B,EAAqBvC,KAAMkB,EAAKd,EAAYK,GAAU,IAG/DlB,EAAOM,UAAU6C,YAAc,SAAsBxB,EAAKd,EAAYK,GACpE,OAAO8B,EAAqBvC,KAAMkB,EAAKd,EAAYK,GAAU,IAkD/DlB,EAAOM,UAAU9B,MAAQ,SAAgByC,EAAQzD,EAAQ7C,EAAQuG,GAE/D,QAAeJ,IAAXtD,EACF0D,EAAW,OACXvG,EAAS8F,KAAK9F,OACd6C,EAAS,OAEJ,QAAesD,IAAXnG,GAA0C,kBAAX6C,EACxC0D,EAAW1D,EACX7C,EAAS8F,KAAK9F,OACd6C,EAAS,MAEJ,KAAI4K,SAAS5K,GAWlB,MAAM,IAAIR,MACR,2EAXFQ,GAAkB,EACd4K,SAASzN,IACXA,GAAkB,OACDmG,IAAbI,IAAwBA,EAAW,UAEvCA,EAAWvG,EACXA,OAASmG,GASb,IAAIiD,EAAYtD,KAAK9F,OAAS6C,EAG9B,SAFesD,IAAXnG,GAAwBA,EAASoJ,KAAWpJ,EAASoJ,GAEpD9C,EAAOtG,OAAS,IAAMA,EAAS,GAAK6C,EAAS,IAAOA,EAASiD,KAAK9F,OACrE,MAAM,IAAIyF,WAAW,0CAGlBc,IAAUA,EAAW,QAG1B,IADA,IAAIgB,GAAc,IAEhB,OAAQhB,GACN,IAAK,MACH,OAAO2C,EAASpD,KAAMQ,EAAQzD,EAAQ7C,GAExC,IAAK,OACL,IAAK,QACH,OAAOyJ,EAAU3D,KAAMQ,EAAQzD,EAAQ7C,GAEzC,IAAK,QACH,OAAO2J,EAAW7D,KAAMQ,EAAQzD,EAAQ7C,GAE1C,IAAK,SACL,IAAK,SACH,OAAO+J,EAAYjE,KAAMQ,EAAQzD,EAAQ7C,GAE3C,IAAK,SAEH,OAAOgK,EAAYlE,KAAMQ,EAAQzD,EAAQ7C,GAE3C,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAOiK,EAAUnE,KAAMQ,EAAQzD,EAAQ7C,GAEzC,QACE,GAAIuH,EAAa,MAAM,IAAI5G,UAAU,qBAAuB4F,GAC5DA,GAAY,GAAKA,GAAUmB,cAC3BH,GAAc,IAKtBlC,EAAOM,UAAU+H,OAAS,WACxB,MAAO,CACLzG,KAAM,SACNC,KAAM/G,MAAMwF,UAAUe,MAAMnC,KAAKuB,KAAKnB,MAAQmB,KAAM,KAwFxD,IAAIkF,EAAuB,KAoB3B,SAASlD,EAAYe,EAAKtG,EAAOC,GAC/B,IAAImL,EAAM,GACVnL,EAAMmB,KAAK2G,IAAIzB,EAAI7I,OAAQwC,GAE3B,IAAK,IAAIvC,EAAIsC,EAAOtC,EAAIuC,IAAOvC,EAC7B0N,GAAO/E,OAAOqC,aAAsB,IAATpC,EAAI5I,IAEjC,OAAO0N,EAGT,SAAS5F,EAAac,EAAKtG,EAAOC,GAChC,IAAImL,EAAM,GACVnL,EAAMmB,KAAK2G,IAAIzB,EAAI7I,OAAQwC,GAE3B,IAAK,IAAIvC,EAAIsC,EAAOtC,EAAIuC,IAAOvC,EAC7B0N,GAAO/E,OAAOqC,aAAapC,EAAI5I,IAEjC,OAAO0N,EAGT,SAAS/F,EAAUiB,EAAKtG,EAAOC,GAC7B,IAAIzC,EAAM8I,EAAI7I,SAETuC,GAASA,EAAQ,KAAGA,EAAQ,KAC5BC,GAAOA,EAAM,GAAKA,EAAMzC,KAAKyC,EAAMzC,GAGxC,IADA,IAAI6N,EAAM,GACD3N,EAAIsC,EAAOtC,EAAIuC,IAAOvC,EAC7B2N,GAAOC,EAAMhF,EAAI5I,IAEnB,OAAO2N,EAGT,SAAS3F,EAAcY,EAAKtG,EAAOC,GAGjC,IAFA,IAAIsL,EAAQjF,EAAInC,MAAMnE,EAAOC,GACzB+H,EAAM,GACDtK,EAAI,EAAGA,EAAI6N,EAAM9N,OAAQC,GAAK,EACrCsK,GAAO3B,OAAOqC,aAAa6C,EAAM7N,GAAoB,IAAf6N,EAAM7N,EAAI,IAElD,OAAOsK,EA0CT,SAASwD,EAAalL,EAAQmL,EAAKhO,GACjC,GAAK6C,EAAS,IAAO,GAAKA,EAAS,EAAG,MAAM,IAAI4C,WAAW,sBAC3D,GAAI5C,EAASmL,EAAMhO,EAAQ,MAAM,IAAIyF,WAAW,yCA+JlD,SAASwI,EAAUpF,EAAK/E,EAAOjB,EAAQmL,EAAKf,EAAK3C,GAC/C,IAAKjF,EAAOwB,SAASgC,GAAM,MAAM,IAAIlI,UAAU,+CAC/C,GAAImD,EAAQmJ,GAAOnJ,EAAQwG,EAAK,MAAM,IAAI7E,WAAW,qCACrD,GAAI5C,EAASmL,EAAMnF,EAAI7I,OAAQ,MAAM,IAAIyF,WAAW,sBAkDtD,SAASyI,EAAmBrF,EAAK/E,EAAOjB,EAAQsL,GAC1CrK,EAAQ,IAAGA,EAAQ,MAASA,EAAQ,GACxC,IAAK,IAAI7D,EAAI,EAAGgJ,EAAItF,KAAK2G,IAAIzB,EAAI7I,OAAS6C,EAAQ,GAAI5C,EAAIgJ,IAAKhJ,EAC7D4I,EAAIhG,EAAS5C,IAAM6D,EAAS,KAAS,GAAKqK,EAAelO,EAAI,EAAIA,MAClC,GAA5BkO,EAAelO,EAAI,EAAIA,GA8B9B,SAASmO,EAAmBvF,EAAK/E,EAAOjB,EAAQsL,GAC1CrK,EAAQ,IAAGA,EAAQ,WAAaA,EAAQ,GAC5C,IAAK,IAAI7D,EAAI,EAAGgJ,EAAItF,KAAK2G,IAAIzB,EAAI7I,OAAS6C,EAAQ,GAAI5C,EAAIgJ,IAAKhJ,EAC7D4I,EAAIhG,EAAS5C,GAAM6D,IAAuC,GAA5BqK,EAAelO,EAAI,EAAIA,GAAU,IAmJnE,SAASoO,EAAcxF,EAAK/E,EAAOjB,EAAQmL,EAAKf,EAAK3C,GACnD,GAAIzH,EAASmL,EAAMnF,EAAI7I,OAAQ,MAAM,IAAIyF,WAAW,sBACpD,GAAI5C,EAAS,EAAG,MAAM,IAAI4C,WAAW,sBAGvC,SAAS6I,EAAYzF,EAAK/E,EAAOjB,EAAQsL,EAAcI,GAKrD,OAJKA,GACHF,EAAaxF,EAAK/E,EAAOjB,EAAQ,GAEnCsC,EAAQtB,MAAMgF,EAAK/E,EAAOjB,EAAQsL,EAAc,GAAI,GAC7CtL,EAAS,EAWlB,SAAS2L,EAAa3F,EAAK/E,EAAOjB,EAAQsL,EAAcI,GAKtD,OAJKA,GACHF,EAAaxF,EAAK/E,EAAOjB,EAAQ,GAEnCsC,EAAQtB,MAAMgF,EAAK/E,EAAOjB,EAAQsL,EAAc,GAAI,GAC7CtL,EAAS,EA/clBwC,EAAOM,UAAUe,MAAQ,SAAgBnE,EAAOC,GAC9C,IAoBIiM,EApBA1O,EAAM+F,KAAK9F,OAqBf,IApBAuC,IAAUA,GAGE,GACVA,GAASxC,GACG,IAAGwC,EAAQ,GACdA,EAAQxC,IACjBwC,EAAQxC,IANVyC,OAAc2D,IAAR3D,EAAoBzC,IAAQyC,GASxB,GACRA,GAAOzC,GACG,IAAGyC,EAAM,GACVA,EAAMzC,IACfyC,EAAMzC,GAGJyC,EAAMD,IAAOC,EAAMD,GAGnB8C,EAAOC,qBACTmJ,EAAS3I,KAAK2F,SAASlJ,EAAOC,IACvBkD,UAAYL,EAAOM,cACrB,CACL,IAAI+I,EAAWlM,EAAMD,EACrBkM,EAAS,IAAIpJ,EAAOqJ,OAAUvI,GAC9B,IAAK,IAAIlG,EAAI,EAAGA,EAAIyO,IAAYzO,EAC9BwO,EAAOxO,GAAK6F,KAAK7F,EAAIsC,GAIzB,OAAOkM,GAWTpJ,EAAOM,UAAUgJ,WAAa,SAAqB9L,EAAQjC,EAAY2N,GACrE1L,GAAkB,EAClBjC,GAA0B,EACrB2N,GAAUR,EAAYlL,EAAQjC,EAAYkF,KAAK9F,QAKpD,IAHA,IAAIgH,EAAMlB,KAAKjD,GACX+L,EAAM,EACN3O,EAAI,IACCA,EAAIW,IAAegO,GAAO,MACjC5H,GAAOlB,KAAKjD,EAAS5C,GAAK2O,EAG5B,OAAO5H,GAGT3B,EAAOM,UAAUkJ,WAAa,SAAqBhM,EAAQjC,EAAY2N,GACrE1L,GAAkB,EAClBjC,GAA0B,EACrB2N,GACHR,EAAYlL,EAAQjC,EAAYkF,KAAK9F,QAKvC,IAFA,IAAIgH,EAAMlB,KAAKjD,IAAWjC,GACtBgO,EAAM,EACHhO,EAAa,IAAMgO,GAAO,MAC/B5H,GAAOlB,KAAKjD,IAAWjC,GAAcgO,EAGvC,OAAO5H,GAGT3B,EAAOM,UAAUmJ,UAAY,SAAoBjM,EAAQ0L,GAEvD,OADKA,GAAUR,EAAYlL,EAAQ,EAAGiD,KAAK9F,QACpC8F,KAAKjD,IAGdwC,EAAOM,UAAUoJ,aAAe,SAAuBlM,EAAQ0L,GAE7D,OADKA,GAAUR,EAAYlL,EAAQ,EAAGiD,KAAK9F,QACpC8F,KAAKjD,GAAWiD,KAAKjD,EAAS,IAAM,GAG7CwC,EAAOM,UAAUmD,aAAe,SAAuBjG,EAAQ0L,GAE7D,OADKA,GAAUR,EAAYlL,EAAQ,EAAGiD,KAAK9F,QACnC8F,KAAKjD,IAAW,EAAKiD,KAAKjD,EAAS,IAG7CwC,EAAOM,UAAUqJ,aAAe,SAAuBnM,EAAQ0L,GAG7D,OAFKA,GAAUR,EAAYlL,EAAQ,EAAGiD,KAAK9F,SAElC8F,KAAKjD,GACTiD,KAAKjD,EAAS,IAAM,EACpBiD,KAAKjD,EAAS,IAAM,IACD,SAAnBiD,KAAKjD,EAAS,IAGrBwC,EAAOM,UAAUsJ,aAAe,SAAuBpM,EAAQ0L,GAG7D,OAFKA,GAAUR,EAAYlL,EAAQ,EAAGiD,KAAK9F,QAEpB,SAAf8F,KAAKjD,IACTiD,KAAKjD,EAAS,IAAM,GACrBiD,KAAKjD,EAAS,IAAM,EACrBiD,KAAKjD,EAAS,KAGlBwC,EAAOM,UAAUuJ,UAAY,SAAoBrM,EAAQjC,EAAY2N,GACnE1L,GAAkB,EAClBjC,GAA0B,EACrB2N,GAAUR,EAAYlL,EAAQjC,EAAYkF,KAAK9F,QAKpD,IAHA,IAAIgH,EAAMlB,KAAKjD,GACX+L,EAAM,EACN3O,EAAI,IACCA,EAAIW,IAAegO,GAAO,MACjC5H,GAAOlB,KAAKjD,EAAS5C,GAAK2O,EAM5B,OAFI5H,IAFJ4H,GAAO,OAES5H,GAAOrD,KAAKC,IAAI,EAAG,EAAIhD,IAEhCoG,GAGT3B,EAAOM,UAAUwJ,UAAY,SAAoBtM,EAAQjC,EAAY2N,GACnE1L,GAAkB,EAClBjC,GAA0B,EACrB2N,GAAUR,EAAYlL,EAAQjC,EAAYkF,KAAK9F,QAKpD,IAHA,IAAIC,EAAIW,EACJgO,EAAM,EACN5H,EAAMlB,KAAKjD,IAAW5C,GACnBA,EAAI,IAAM2O,GAAO,MACtB5H,GAAOlB,KAAKjD,IAAW5C,GAAK2O,EAM9B,OAFI5H,IAFJ4H,GAAO,OAES5H,GAAOrD,KAAKC,IAAI,EAAG,EAAIhD,IAEhCoG,GAGT3B,EAAOM,UAAUyJ,SAAW,SAAmBvM,EAAQ0L,GAErD,OADKA,GAAUR,EAAYlL,EAAQ,EAAGiD,KAAK9F,QACtB,IAAf8F,KAAKjD,IAC0B,GAA5B,IAAOiD,KAAKjD,GAAU,GADKiD,KAAKjD,IAI3CwC,EAAOM,UAAU0J,YAAc,SAAsBxM,EAAQ0L,GACtDA,GAAUR,EAAYlL,EAAQ,EAAGiD,KAAK9F,QAC3C,IAAIgH,EAAMlB,KAAKjD,GAAWiD,KAAKjD,EAAS,IAAM,EAC9C,OAAc,MAANmE,EAAsB,WAANA,EAAmBA,GAG7C3B,EAAOM,UAAU2J,YAAc,SAAsBzM,EAAQ0L,GACtDA,GAAUR,EAAYlL,EAAQ,EAAGiD,KAAK9F,QAC3C,IAAIgH,EAAMlB,KAAKjD,EAAS,GAAMiD,KAAKjD,IAAW,EAC9C,OAAc,MAANmE,EAAsB,WAANA,EAAmBA,GAG7C3B,EAAOM,UAAU4J,YAAc,SAAsB1M,EAAQ0L,GAG3D,OAFKA,GAAUR,EAAYlL,EAAQ,EAAGiD,KAAK9F,QAEnC8F,KAAKjD,GACViD,KAAKjD,EAAS,IAAM,EACpBiD,KAAKjD,EAAS,IAAM,GACpBiD,KAAKjD,EAAS,IAAM,IAGzBwC,EAAOM,UAAU6J,YAAc,SAAsB3M,EAAQ0L,GAG3D,OAFKA,GAAUR,EAAYlL,EAAQ,EAAGiD,KAAK9F,QAEnC8F,KAAKjD,IAAW,GACrBiD,KAAKjD,EAAS,IAAM,GACpBiD,KAAKjD,EAAS,IAAM,EACpBiD,KAAKjD,EAAS,IAGnBwC,EAAOM,UAAU8J,YAAc,SAAsB5M,EAAQ0L,GAE3D,OADKA,GAAUR,EAAYlL,EAAQ,EAAGiD,KAAK9F,QACpCmF,EAAQxC,KAAKmD,KAAMjD,GAAQ,EAAM,GAAI,IAG9CwC,EAAOM,UAAU+J,YAAc,SAAsB7M,EAAQ0L,GAE3D,OADKA,GAAUR,EAAYlL,EAAQ,EAAGiD,KAAK9F,QACpCmF,EAAQxC,KAAKmD,KAAMjD,GAAQ,EAAO,GAAI,IAG/CwC,EAAOM,UAAUgK,aAAe,SAAuB9M,EAAQ0L,GAE7D,OADKA,GAAUR,EAAYlL,EAAQ,EAAGiD,KAAK9F,QACpCmF,EAAQxC,KAAKmD,KAAMjD,GAAQ,EAAM,GAAI,IAG9CwC,EAAOM,UAAUiK,aAAe,SAAuB/M,EAAQ0L,GAE7D,OADKA,GAAUR,EAAYlL,EAAQ,EAAGiD,KAAK9F,QACpCmF,EAAQxC,KAAKmD,KAAMjD,GAAQ,EAAO,GAAI,IAS/CwC,EAAOM,UAAUkK,YAAc,SAAsB/L,EAAOjB,EAAQjC,EAAY2N,IAC9EzK,GAASA,EACTjB,GAAkB,EAClBjC,GAA0B,EACrB2N,IAEHN,EAASnI,KAAMhC,EAAOjB,EAAQjC,EADf+C,KAAKC,IAAI,EAAG,EAAIhD,GAAc,EACO,GAGtD,IAAIgO,EAAM,EACN3O,EAAI,EAER,IADA6F,KAAKjD,GAAkB,IAARiB,IACN7D,EAAIW,IAAegO,GAAO,MACjC9I,KAAKjD,EAAS5C,GAAM6D,EAAQ8K,EAAO,IAGrC,OAAO/L,EAASjC,GAGlByE,EAAOM,UAAUmK,YAAc,SAAsBhM,EAAOjB,EAAQjC,EAAY2N,IAC9EzK,GAASA,EACTjB,GAAkB,EAClBjC,GAA0B,EACrB2N,IAEHN,EAASnI,KAAMhC,EAAOjB,EAAQjC,EADf+C,KAAKC,IAAI,EAAG,EAAIhD,GAAc,EACO,GAGtD,IAAIX,EAAIW,EAAa,EACjBgO,EAAM,EAEV,IADA9I,KAAKjD,EAAS5C,GAAa,IAAR6D,IACV7D,GAAK,IAAM2O,GAAO,MACzB9I,KAAKjD,EAAS5C,GAAM6D,EAAQ8K,EAAO,IAGrC,OAAO/L,EAASjC,GAGlByE,EAAOM,UAAUoK,WAAa,SAAqBjM,EAAOjB,EAAQ0L,GAMhE,OALAzK,GAASA,EACTjB,GAAkB,EACb0L,GAAUN,EAASnI,KAAMhC,EAAOjB,EAAQ,EAAG,IAAM,GACjDwC,EAAOC,sBAAqBxB,EAAQH,KAAKQ,MAAML,IACpDgC,KAAKjD,GAAmB,IAARiB,EACTjB,EAAS,GAWlBwC,EAAOM,UAAUqK,cAAgB,SAAwBlM,EAAOjB,EAAQ0L,GAUtE,OATAzK,GAASA,EACTjB,GAAkB,EACb0L,GAAUN,EAASnI,KAAMhC,EAAOjB,EAAQ,EAAG,MAAQ,GACpDwC,EAAOC,qBACTQ,KAAKjD,GAAmB,IAARiB,EAChBgC,KAAKjD,EAAS,GAAMiB,IAAU,GAE9BoK,EAAkBpI,KAAMhC,EAAOjB,GAAQ,GAElCA,EAAS,GAGlBwC,EAAOM,UAAUsK,cAAgB,SAAwBnM,EAAOjB,EAAQ0L,GAUtE,OATAzK,GAASA,EACTjB,GAAkB,EACb0L,GAAUN,EAASnI,KAAMhC,EAAOjB,EAAQ,EAAG,MAAQ,GACpDwC,EAAOC,qBACTQ,KAAKjD,GAAWiB,IAAU,EAC1BgC,KAAKjD,EAAS,GAAc,IAARiB,GAEpBoK,EAAkBpI,KAAMhC,EAAOjB,GAAQ,GAElCA,EAAS,GAUlBwC,EAAOM,UAAUuK,cAAgB,SAAwBpM,EAAOjB,EAAQ0L,GAYtE,OAXAzK,GAASA,EACTjB,GAAkB,EACb0L,GAAUN,EAASnI,KAAMhC,EAAOjB,EAAQ,EAAG,WAAY,GACxDwC,EAAOC,qBACTQ,KAAKjD,EAAS,GAAMiB,IAAU,GAC9BgC,KAAKjD,EAAS,GAAMiB,IAAU,GAC9BgC,KAAKjD,EAAS,GAAMiB,IAAU,EAC9BgC,KAAKjD,GAAmB,IAARiB,GAEhBsK,EAAkBtI,KAAMhC,EAAOjB,GAAQ,GAElCA,EAAS,GAGlBwC,EAAOM,UAAUwK,cAAgB,SAAwBrM,EAAOjB,EAAQ0L,GAYtE,OAXAzK,GAASA,EACTjB,GAAkB,EACb0L,GAAUN,EAASnI,KAAMhC,EAAOjB,EAAQ,EAAG,WAAY,GACxDwC,EAAOC,qBACTQ,KAAKjD,GAAWiB,IAAU,GAC1BgC,KAAKjD,EAAS,GAAMiB,IAAU,GAC9BgC,KAAKjD,EAAS,GAAMiB,IAAU,EAC9BgC,KAAKjD,EAAS,GAAc,IAARiB,GAEpBsK,EAAkBtI,KAAMhC,EAAOjB,GAAQ,GAElCA,EAAS,GAGlBwC,EAAOM,UAAUyK,WAAa,SAAqBtM,EAAOjB,EAAQjC,EAAY2N,GAG5E,GAFAzK,GAASA,EACTjB,GAAkB,GACb0L,EAAU,CACb,IAAI8B,EAAQ1M,KAAKC,IAAI,EAAG,EAAIhD,EAAa,GAEzCqN,EAASnI,KAAMhC,EAAOjB,EAAQjC,EAAYyP,EAAQ,GAAIA,GAGxD,IAAIpQ,EAAI,EACJ2O,EAAM,EACN0B,EAAM,EAEV,IADAxK,KAAKjD,GAAkB,IAARiB,IACN7D,EAAIW,IAAegO,GAAO,MAC7B9K,EAAQ,GAAa,IAARwM,GAAsC,IAAzBxK,KAAKjD,EAAS5C,EAAI,KAC9CqQ,EAAM,GAERxK,KAAKjD,EAAS5C,IAAO6D,EAAQ8K,GAAQ,GAAK0B,EAAM,IAGlD,OAAOzN,EAASjC,GAGlByE,EAAOM,UAAU4K,WAAa,SAAqBzM,EAAOjB,EAAQjC,EAAY2N,GAG5E,GAFAzK,GAASA,EACTjB,GAAkB,GACb0L,EAAU,CACb,IAAI8B,EAAQ1M,KAAKC,IAAI,EAAG,EAAIhD,EAAa,GAEzCqN,EAASnI,KAAMhC,EAAOjB,EAAQjC,EAAYyP,EAAQ,GAAIA,GAGxD,IAAIpQ,EAAIW,EAAa,EACjBgO,EAAM,EACN0B,EAAM,EAEV,IADAxK,KAAKjD,EAAS5C,GAAa,IAAR6D,IACV7D,GAAK,IAAM2O,GAAO,MACrB9K,EAAQ,GAAa,IAARwM,GAAsC,IAAzBxK,KAAKjD,EAAS5C,EAAI,KAC9CqQ,EAAM,GAERxK,KAAKjD,EAAS5C,IAAO6D,EAAQ8K,GAAQ,GAAK0B,EAAM,IAGlD,OAAOzN,EAASjC,GAGlByE,EAAOM,UAAU6K,UAAY,SAAoB1M,EAAOjB,EAAQ0L,GAO9D,OANAzK,GAASA,EACTjB,GAAkB,EACb0L,GAAUN,EAASnI,KAAMhC,EAAOjB,EAAQ,EAAG,KAAO,KAClDwC,EAAOC,sBAAqBxB,EAAQH,KAAKQ,MAAML,IAChDA,EAAQ,IAAGA,EAAQ,IAAOA,EAAQ,GACtCgC,KAAKjD,GAAmB,IAARiB,EACTjB,EAAS,GAGlBwC,EAAOM,UAAU8K,aAAe,SAAuB3M,EAAOjB,EAAQ0L,GAUpE,OATAzK,GAASA,EACTjB,GAAkB,EACb0L,GAAUN,EAASnI,KAAMhC,EAAOjB,EAAQ,EAAG,OAAS,OACrDwC,EAAOC,qBACTQ,KAAKjD,GAAmB,IAARiB,EAChBgC,KAAKjD,EAAS,GAAMiB,IAAU,GAE9BoK,EAAkBpI,KAAMhC,EAAOjB,GAAQ,GAElCA,EAAS,GAGlBwC,EAAOM,UAAU+K,aAAe,SAAuB5M,EAAOjB,EAAQ0L,GAUpE,OATAzK,GAASA,EACTjB,GAAkB,EACb0L,GAAUN,EAASnI,KAAMhC,EAAOjB,EAAQ,EAAG,OAAS,OACrDwC,EAAOC,qBACTQ,KAAKjD,GAAWiB,IAAU,EAC1BgC,KAAKjD,EAAS,GAAc,IAARiB,GAEpBoK,EAAkBpI,KAAMhC,EAAOjB,GAAQ,GAElCA,EAAS,GAGlBwC,EAAOM,UAAUgL,aAAe,SAAuB7M,EAAOjB,EAAQ0L,GAYpE,OAXAzK,GAASA,EACTjB,GAAkB,EACb0L,GAAUN,EAASnI,KAAMhC,EAAOjB,EAAQ,EAAG,YAAa,YACzDwC,EAAOC,qBACTQ,KAAKjD,GAAmB,IAARiB,EAChBgC,KAAKjD,EAAS,GAAMiB,IAAU,EAC9BgC,KAAKjD,EAAS,GAAMiB,IAAU,GAC9BgC,KAAKjD,EAAS,GAAMiB,IAAU,IAE9BsK,EAAkBtI,KAAMhC,EAAOjB,GAAQ,GAElCA,EAAS,GAGlBwC,EAAOM,UAAUiL,aAAe,SAAuB9M,EAAOjB,EAAQ0L,GAapE,OAZAzK,GAASA,EACTjB,GAAkB,EACb0L,GAAUN,EAASnI,KAAMhC,EAAOjB,EAAQ,EAAG,YAAa,YACzDiB,EAAQ,IAAGA,EAAQ,WAAaA,EAAQ,GACxCuB,EAAOC,qBACTQ,KAAKjD,GAAWiB,IAAU,GAC1BgC,KAAKjD,EAAS,GAAMiB,IAAU,GAC9BgC,KAAKjD,EAAS,GAAMiB,IAAU,EAC9BgC,KAAKjD,EAAS,GAAc,IAARiB,GAEpBsK,EAAkBtI,KAAMhC,EAAOjB,GAAQ,GAElCA,EAAS,GAgBlBwC,EAAOM,UAAUkL,aAAe,SAAuB/M,EAAOjB,EAAQ0L,GACpE,OAAOD,EAAWxI,KAAMhC,EAAOjB,GAAQ,EAAM0L,IAG/ClJ,EAAOM,UAAUmL,aAAe,SAAuBhN,EAAOjB,EAAQ0L,GACpE,OAAOD,EAAWxI,KAAMhC,EAAOjB,GAAQ,EAAO0L,IAWhDlJ,EAAOM,UAAUoL,cAAgB,SAAwBjN,EAAOjB,EAAQ0L,GACtE,OAAOC,EAAY1I,KAAMhC,EAAOjB,GAAQ,EAAM0L,IAGhDlJ,EAAOM,UAAUqL,cAAgB,SAAwBlN,EAAOjB,EAAQ0L,GACtE,OAAOC,EAAY1I,KAAMhC,EAAOjB,GAAQ,EAAO0L,IAIjDlJ,EAAOM,UAAUoB,KAAO,SAAeoG,EAAQ8D,EAAa1O,EAAOC,GAQjE,GAPKD,IAAOA,EAAQ,GACfC,GAAe,IAARA,IAAWA,EAAMsD,KAAK9F,QAC9BiR,GAAe9D,EAAOnN,SAAQiR,EAAc9D,EAAOnN,QAClDiR,IAAaA,EAAc,GAC5BzO,EAAM,GAAKA,EAAMD,IAAOC,EAAMD,GAG9BC,IAAQD,EAAO,OAAO,EAC1B,GAAsB,IAAlB4K,EAAOnN,QAAgC,IAAhB8F,KAAK9F,OAAc,OAAO,EAGrD,GAAIiR,EAAc,EAChB,MAAM,IAAIxL,WAAW,6BAEvB,GAAIlD,EAAQ,GAAKA,GAASuD,KAAK9F,OAAQ,MAAM,IAAIyF,WAAW,6BAC5D,GAAIjD,EAAM,EAAG,MAAM,IAAIiD,WAAW,2BAG9BjD,EAAMsD,KAAK9F,SAAQwC,EAAMsD,KAAK9F,QAC9BmN,EAAOnN,OAASiR,EAAczO,EAAMD,IACtCC,EAAM2K,EAAOnN,OAASiR,EAAc1O,GAGtC,IACItC,EADAF,EAAMyC,EAAMD,EAGhB,GAAIuD,OAASqH,GAAU5K,EAAQ0O,GAAeA,EAAczO,EAE1D,IAAKvC,EAAIF,EAAM,EAAGE,GAAK,IAAKA,EAC1BkN,EAAOlN,EAAIgR,GAAenL,KAAK7F,EAAIsC,QAEhC,GAAIxC,EAAM,MAASsF,EAAOC,oBAE/B,IAAKrF,EAAI,EAAGA,EAAIF,IAAOE,EACrBkN,EAAOlN,EAAIgR,GAAenL,KAAK7F,EAAIsC,QAGrCJ,WAAWwD,UAAUuL,IAAI3M,KACvB4I,EACArH,KAAK2F,SAASlJ,EAAOA,EAAQxC,GAC7BkR,GAIJ,OAAOlR,GAOTsF,EAAOM,UAAUsG,KAAO,SAAejF,EAAKzE,EAAOC,EAAK+D,GAEtD,GAAmB,kBAARS,EAAkB,CAS3B,GARqB,kBAAVzE,GACTgE,EAAWhE,EACXA,EAAQ,EACRC,EAAMsD,KAAK9F,QACa,kBAARwC,IAChB+D,EAAW/D,EACXA,EAAMsD,KAAK9F,QAEM,IAAfgH,EAAIhH,OAAc,CACpB,IAAIoC,EAAO4E,EAAIxF,WAAW,GACtBY,EAAO,MACT4E,EAAM5E,GAGV,QAAiB+D,IAAbI,GAA8C,kBAAbA,EACnC,MAAM,IAAI5F,UAAU,6BAEtB,GAAwB,kBAAb4F,IAA0BlB,EAAOmB,WAAWD,GACrD,MAAM,IAAI5F,UAAU,qBAAuB4F,OAErB,kBAARS,IAChBA,GAAY,KAId,GAAIzE,EAAQ,GAAKuD,KAAK9F,OAASuC,GAASuD,KAAK9F,OAASwC,EACpD,MAAM,IAAIiD,WAAW,sBAGvB,GAAIjD,GAAOD,EACT,OAAOuD,KAQT,IAAI7F,EACJ,GANAsC,KAAkB,EAClBC,OAAc2D,IAAR3D,EAAoBsD,KAAK9F,OAASwC,IAAQ,EAE3CwE,IAAKA,EAAM,GAGG,kBAARA,EACT,IAAK/G,EAAIsC,EAAOtC,EAAIuC,IAAOvC,EACzB6F,KAAK7F,GAAK+G,MAEP,CACL,IAAI8G,EAAQzI,EAAOwB,SAASG,GACxBA,EACAQ,EAAY,IAAInC,EAAO2B,EAAKT,GAAUjC,YACtCvE,EAAM+N,EAAM9N,OAChB,IAAKC,EAAI,EAAGA,EAAIuC,EAAMD,IAAStC,EAC7B6F,KAAK7F,EAAIsC,GAASuL,EAAM7N,EAAIF,GAIhC,OAAO+F,MAMT,IAAIqL,EAAoB,qBAmBxB,SAAStD,EAAOzF,GACd,OAAIA,EAAI,GAAW,IAAMA,EAAE9D,SAAS,IAC7B8D,EAAE9D,SAAS,IAGpB,SAASkD,EAAalB,EAAQ4D,GAE5B,IAAIW,EADJX,EAAQA,GAASxG,IAMjB,IAJA,IAAI1D,EAASsG,EAAOtG,OAChBoR,EAAgB,KAChBtD,EAAQ,GAEH7N,EAAI,EAAGA,EAAID,IAAUC,EAAG,CAI/B,IAHA4K,EAAYvE,EAAO9E,WAAWvB,IAGd,OAAU4K,EAAY,MAAQ,CAE5C,IAAKuG,EAAe,CAElB,GAAIvG,EAAY,MAAQ,EAEjBX,GAAS,IAAM,GAAG4D,EAAM/L,KAAK,IAAM,IAAM,KAC9C,SACK,GAAI9B,EAAI,IAAMD,EAAQ,EAEtBkK,GAAS,IAAM,GAAG4D,EAAM/L,KAAK,IAAM,IAAM,KAC9C,SAIFqP,EAAgBvG,EAEhB,SAIF,GAAIA,EAAY,MAAQ,EACjBX,GAAS,IAAM,GAAG4D,EAAM/L,KAAK,IAAM,IAAM,KAC9CqP,EAAgBvG,EAChB,SAIFA,EAAkE,OAArDuG,EAAgB,OAAU,GAAKvG,EAAY,YAC/CuG,IAEJlH,GAAS,IAAM,GAAG4D,EAAM/L,KAAK,IAAM,IAAM,KAMhD,GAHAqP,EAAgB,KAGZvG,EAAY,IAAM,CACpB,IAAKX,GAAS,GAAK,EAAG,MACtB4D,EAAM/L,KAAK8I,QACN,GAAIA,EAAY,KAAO,CAC5B,IAAKX,GAAS,GAAK,EAAG,MACtB4D,EAAM/L,KACJ8I,GAAa,EAAM,IACP,GAAZA,EAAmB,UAEhB,GAAIA,EAAY,MAAS,CAC9B,IAAKX,GAAS,GAAK,EAAG,MACtB4D,EAAM/L,KACJ8I,GAAa,GAAM,IACnBA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,SAEhB,MAAIA,EAAY,SASrB,MAAM,IAAIxI,MAAM,sBARhB,IAAK6H,GAAS,GAAK,EAAG,MACtB4D,EAAM/L,KACJ8I,GAAa,GAAO,IACpBA,GAAa,GAAM,GAAO,IAC1BA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,MAOzB,OAAOiD,EA4BT,SAASrG,EAAemC,GACtB,OAAO3E,EAAO/D,YAhIhB,SAAsB0I,GAIpB,IAFAA,EAUF,SAAqBA,GACnB,OAAIA,EAAIyH,KAAazH,EAAIyH,OAClBzH,EAAI0H,QAAQ,aAAc,IAZ3BC,CAAW3H,GAAK0H,QAAQH,EAAmB,KAEzCnR,OAAS,EAAG,MAAO,GAE3B,KAAO4J,EAAI5J,OAAS,IAAM,GACxB4J,GAAY,IAEd,OAAOA,EAuHmB4H,CAAY5H,IAGxC,SAASF,EAAY+H,EAAKC,EAAK7O,EAAQ7C,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAID,KACbC,EAAI4C,GAAU6O,EAAI1R,QAAYC,GAAKwR,EAAIzR,UADhBC,EAE5ByR,EAAIzR,EAAI4C,GAAU4O,EAAIxR,GAExB,OAAOA,K,qCCvvDT,IAAI0R,EAAiB,EAAQ,KAEzBC,EAAuB,EAAQ,KAE/BC,EAA6B,EAAQ,IAErCC,EAAkB,EAAQ,KAM9BlS,EAAOC,QAJP,SAAwBC,EAAKG,GAC3B,OAAO0R,EAAe7R,IAAQ8R,EAAqB9R,EAAKG,IAAM4R,EAA2B/R,EAAKG,IAAM6R,KAGrElS,EAAOC,QAAQO,YAAa,EAAMR,EAAOC,QAAiB,QAAID,EAAOC,S,mBCZtG,IAAIkS,EAAoB,EAAQ,KAE5BC,EAAkB,EAAQ,KAE1BH,EAA6B,EAAQ,IAErCI,EAAoB,EAAQ,KAMhCrS,EAAOC,QAJP,SAA4BC,GAC1B,OAAOiS,EAAkBjS,IAAQkS,EAAgBlS,IAAQ+R,EAA2B/R,IAAQmS,KAGzDrS,EAAOC,QAAQO,YAAa,EAAMR,EAAOC,QAAiB,QAAID,EAAOC,S,mBCZ1G,IAAIQ,EAAmB,EAAQ,KAW/BT,EAAOC,QATP,SAAqCqS,EAAGC,GACtC,GAAKD,EAAL,CACA,GAAiB,kBAANA,EAAgB,OAAO7R,EAAiB6R,EAAGC,GACtD,IAAI/J,EAAI0D,OAAOnG,UAAUrB,SAASC,KAAK2N,GAAGxL,MAAM,GAAI,GAEpD,MADU,WAAN0B,GAAkB8J,EAAEE,cAAahK,EAAI8J,EAAEE,YAAYC,MAC7C,QAANjK,GAAqB,QAANA,EAAoBjI,MAAMO,KAAKwR,GACxC,cAAN9J,GAAqB,2CAA2CkK,KAAKlK,GAAW/H,EAAiB6R,EAAGC,QAAxG,IAG4CvS,EAAOC,QAAQO,YAAa,EAAMR,EAAOC,QAAiB,QAAID,EAAOC,S,mBCXnH,IAAIgS,EAA6B,EAAQ,IA2DzCjS,EAAOC,QAzDP,SAAoCqS,EAAGK,GACrC,IAAIC,EAAuB,qBAAXhS,QAA0B0R,EAAE1R,OAAOC,WAAayR,EAAE,cAElE,IAAKM,EAAI,CACP,GAAIrS,MAAMG,QAAQ4R,KAAOM,EAAKX,EAA2BK,KAAOK,GAAkBL,GAAyB,kBAAbA,EAAElS,OAAqB,CAC/GwS,IAAIN,EAAIM,GACZ,IAAIvS,EAAI,EAEJwS,EAAI,aAER,MAAO,CACLjP,EAAGiP,EACHrK,EAAG,WACD,OAAInI,GAAKiS,EAAElS,OAAe,CACxB+E,MAAM,GAED,CACLA,MAAM,EACNjB,MAAOoO,EAAEjS,OAGbgD,EAAG,SAAWyB,GACZ,MAAMA,GAERgO,EAAGD,GAIP,MAAM,IAAI9R,UAAU,yIAGtB,IAEIqE,EAFA2N,GAAmB,EACnBC,GAAS,EAEb,MAAO,CACLpP,EAAG,WACDgP,EAAKA,EAAGjO,KAAK2N,IAEf9J,EAAG,WACD,IAAIyK,EAAOL,EAAG1N,OAEd,OADA6N,EAAmBE,EAAK9N,KACjB8N,GAET5P,EAAG,SAAW6P,GACZF,GAAS,EACT5N,EAAM8N,GAERJ,EAAG,WACD,IACOC,GAAoC,MAAhBH,EAAW,QAAWA,EAAW,SAC1D,QACA,GAAII,EAAQ,MAAM5N,MAMmBpF,EAAOC,QAAQO,YAAa,EAAMR,EAAOC,QAAiB,QAAID,EAAOC","file":"static/js/0.b6501ea6.chunk.js","sourcesContent":["function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","var arrayWithHoles = require(\"./arrayWithHoles.js\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableRest = require(\"./nonIterableRest.js\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nmodule.exports = _createForOfIteratorHelper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"sourceRoot":""}